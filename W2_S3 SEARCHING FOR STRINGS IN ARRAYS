1. Write a function is_sorted : string array -> bool which checks if the values of the input array are sorted in strictly increasing order, implying that its elements are unique (use String.compare).
2. Using the binary search algorithm, an element can be found very quickly in a sorted array. 
Write a function find : string array -> string -> int such that find arr word is the index of the word in the sorted array arr if it occurs in arr or -1 if word does not occur in arr. 
The number or array accesses will be counted, to check that you obtain the expected algorithmic complexity. Beware that you really perform the minimal number of accesses. For instance, if your function has to test the contents of a cell twice, be sure to put the result of the access in a variable, and then perform the tests on that variable.

Answer: 

let is_sorted a = 
  let rec check x y =
    if y <= Array.length a - 1
    then
      if String.compare a.(x) a.(y) = -1
      then check (x+1) (y+1)
      else false
    else true in check 0 1;; 

let find dict word = 
  if Array.length dict = 0 then -1 else 
    let t = Array.length dict - 1 in
    let b = 0 in
    let i = (b+t)/2 in 
    let rec find b i t =
      let i = (b+t)/2 in
      let g = String.compare dict.(i) word in
      if b > t 
      then -1
      else if g = -1
      then find (i+1) i t
      else if g = 1
      then find b i (i-1)
      else i in find b i t;;
